# GitLab personal access token
# used to create merge requests on GitLab
# leave it empty to automatically read from the
#   CI_JOB_TOKEN environment variable
gitlab_access_token: "glpat-TOKEN"

# (optional) path to your password-protected GPG private key
# used to sign the commits
# see the `exportkey` target in the Makefile for how to export the key
gpg_key_path: "/home/user/.gnupg/autobump.asc"

# rules for automatically detecting project languages
languages:
  # name of the language, this requires support in the code
  # currently only Python and Java are supported
  python:
    # file extensions in the repository that could indicate
    #   this is a Python project
    extensions:
      - "py"

    # special files in the repository that could indicate
    #   this is a Python project
    special_patterns:
      - "setup.cfg"
      - "setup.py"
      - "pyproject.toml"
    version_files:
      - "{project_name}/__init__.py"
    version_pattern: "(__version__\\s*=\\s*\")\\d+\\.\\d+\\.\\d+(\")"
  java:
    extensions:
      - "java"
    special_patterns:
      - "build.gradle"
      - "lib/build.gradle"
      - "settings.gradle"
      - "pom.xml"
    version_files:
      - "build.gradle"
      - "lib/build.gradle"
    version_pattern: "(version\\s*=\\s*')\\d+\\.\\d+\\.\\d+(')"

# a list of the projects to be managed by this tool
projects:
  # path is simply the path of the repository
  - path: "/home/user/repo1"

    # language can be omitted if auto-detect rules have already been specified
    #   in the `languages` section
    #language: "Python"
  - path: "/home/user/repo2"
    language: "Java"

  # specify a Git URL for AutoBump to clone the repository automatically into a
  #   temporary directory, perform the bump, then delete the temporary directory
  - path: "git@github.com:example/repo3.git"
